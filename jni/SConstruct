import os
from os.path import join, abspath
env = Environment(ENV=os.environ)

if env['PLATFORM'] == 'win32':
	javahome = r'C:\Program Files\Java\jdk1.6.0_18'

	incpath = [join(javahome, 'include'),
		   join(javahome, 'include', 'win32'),
		   r'C:\Program Files\MeCab\sdk',
		   r'C:\Home\lib\protobuf\include']
	
	libpath = [r'C:\Program Files\MeCab\sdk',
		   r'C:\Home\lib\protobuf\lib']
	
	libs = ['libmecab', 'libprotobuf']

	ccflags = (['/DDLL_IMPORT', '/MD', '/EHsc', '/Ox'] +
		   ['/I' + item for item in incpath])
	
	env.AppendUnique(
		CCFLAGS=ccflags,
		LIBPATH=libpath,
		LIBS=libs)
else:
	javahome = '/usr/lib/jvm/java-6-sun'

	incpath = [join(javahome, 'include'),
		   join(javahome, 'include', 'linux')]
	
	libs = ['mecab', 'protobuf']

	ccflags = (['-Wall', '-g', '-O2'] +
		   ['-I' + item for item in incpath])
	
	env.AppendUnique(
		CCFLAGS=ccflags,
		LIBS=libs)

# javah
classdir = join('..', 'bin', 'classes')
impldir = join(classdir, 'net', 'moraleboost', 'mecab', 'impl')
env.JavaH(
	target='.',
	source=[join(impldir, 'StandardTagger.class'),
		join(impldir, 'StandardNode.class'),
		join(impldir, 'LocalProtobufTagger.class')],
	JAVACLASSDIR=classdir)

# protoc
protopath = abspath(join('..', 'etc', 'protobuf'))
env.Command(['messages.pb.cc', 'messages.pb.h'],
	    join(protopath, 'messages.proto'),
	    ('protoc --cpp_out=. --java_out=' + join('..', 'src') +
	     ' "--proto_path=' + protopath + '" ${SOURCE}'))

# shared library
slib = env.SharedLibrary('CMeCab', ['mecab.cpp', 'messages.pb.cc'])

# embed manifest
if env['PLATFORM'] == 'win32':
	Clean(slib, 'CMeCab.dll.manifest')
	env.Command('Dummy.dll', 'CMeCab.dll',
		    ('mt.exe -manifest ${SOURCE}.manifest ' +
		     '-outputresource:${SOURCE};2 -nologo'))

