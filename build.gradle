apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'net.moraleboost.cmecab-java'
archivesBaseName = 'cmecab-java'
version = '2.1.0'

sourceCompatibility = 1.6
targetCompatibility = 1.6

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
javadoc.options.charSet = 'UTF-8'

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.ryanharter.gradle-git-repo:gradle-plugin:1.0.1'
	}
}

apply plugin: 'git-repo'

configurations {
    deployerJars
}

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives javadocJar
}

repositories {
    maven {
        url 'http://maven.restlet.org/'
    }
    maven {
        url 'http://jcenter.bintray.com/'
    }
    mavenCentral()
}

dependencies {
    compile('com.nativelibs4java:bridj:0.7.0')
    compile fileTree(dir: 'lib', include: '*.jar')

    testCompile('junit:junit:4.12')

    deployerJars('org.apache.maven.wagon:wagon-http:2.2')
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: System.properties['cmecab_java.repositoryUrl'])
        snapshotRepository(url: System.properties['cmecab_java.repositoryUrl'])
            pom.groupId = 'net.moraleboost'
            pom.artifactId = archivesBaseName
            pom.version = version

            pom.project {
                name = 'Mecab java bindingn'
                packaging = 'jar'
                description = 'Mecab java bindingn.'
            }
//        repository(url: System.properties['cmecab_java.repositoryUrl']) {
//            authentication(
//                    userName: System.properties['cmecab_java.repositoryUser'],
//                    password: System.properties['cmecab_java.repositoryPassword'])
//        }
    }
}
